BUGS
  Label is not persisting becuause it's being written to the decorated copy
  Firefox: whole site not working (not loading directives?)
  Relationships vanish below a certain y-coordinate.
  Multiple relationships between 2 entities always cross each other
  layoutGraph is getting called twice (investigate)

MUST HAVE FOR FIRST DEMO
	Labeled relationship endings
  Persona
  Create random string identifier for graph and make this the path
  Score the endpoints based on the severity of their angles instead of pure offset.  (The closer of 2 entities loses the negotiation sooner than it should.)
  Password protection for access
  Password protection for edit

Flawless endpoint negotiation:
  Endpoints are sorted by:
    1: angle they would take, in the absence of other endpoints;
    2: if multiple endpoints would be at angle == 0, sort between them based on where the endpoint would be placed on the side (old "ideal offset").

REARCHITECTURE FOR PERFORMANCE
  Create graph.endpoints empty collection of objects in memory when page loads
  When creating new relationship: add two endpoints, assign each an entityID and relationship ID, and assign
  Update graph.endpoints when entities change
  Create graph.drivenRelationships collection whose items each directly reference two endpoint objects

  Reverse pointers also created: entities get a list of their endpoints; endpoints know their relationships

  When entity changes its size or position (method name: 'change'),
    It asks each of its endpoints what the associated entity is
      Endpoint asks its relationship what the other endpoint is (provides a pointer to itself as an argument)
        Relationship looks at its list of two items and figures out which one is NOT the one that asked
    It tells the other entity that a change has occurred (method name: 'remoteChange', provides pointer to itself as an argument)
      Remove entity receives 'remoteChange' and DOES NOT need to propagate another call because it's already 1 level deep, and also has received a pointer to the other entity
        Remote entity determines the side and position of JUST THAT endpoint
        Remote entity renegotates all its endpoint locations on ALL sides
    It determines the sides and positions of ALL of its endpoints
    It renegotiates all of its endpoint locations on ALL sides

  FACTORIES
    Entity factory
      Inputs: ID, x, y, width, height, name, attributes
      Output: object with same attributes, plus:
        "sides" hash with keys top, bottom, left, right.
          Each side is an object which contains an empty list of endpoints, plus functions:

    Relationship factory
      Inputs: ID, entity1 object, entity2 object
      Output: Relationship object with references to two Endpoint objects

    Graph factory
      Purpose:
        Orchestrate download, contruction, and interconnection of all graph items,
        such that that they are consumable by directives such as ng-repeat.
        All consumed data should be pre-calculated, and directly modifiable for
        observation by other directives -- not calculated on demand.
      Input: graph ID to fetch
      Output: graph object with fully interconnected arrays:
        entities
        sides
        relationships
        endpoints

      Approach:
        1. AJAX-download graph JSON from server by its ID
        2. map entity primitives to Entity objects using EntityFactory
        3. map relationship primitives to Relationship objects using RelationshipFactory
        4. create array of direct references to all Endpoints in the Relationships








BACKLOG
	draw new entity "ghost" connected to mouse
  Arrowheads should "squish" together when there's not enough space
	Pan: click and drag the canvas in select mode
  Enter finishes renaming entity
  Rename begins immediately on entity creation
  Tab to finish rename and move to edit attributes
  print layout shouldn't show toolbar
  reflexive relationships should float around the entity away from other relationships
  identifier squiggle, toggled by Command-Shift-Click
  ctrl-S hotkey for save graph
	zoom: turn the mouse wheel (direction configurable?)
	add entity and relationship at same time, with preset symbols, based on keystrokes. 'm' adds a has-many relationship from the selected entity. Also '1', and just 'h' (has) which puts down '?' symbols.
  place entity by its center instead of corner
	new relationship "ghost" connected to mouse
  make entity not resizable below minimum sizing

INDICATE SYNTAX ERRORS
  only one end can have an identifier
	both ends should say "be" if either end does
	duplicate entity names are indicated as a syntax error (highlight in red, hover text)
	duplicate attribute names within an entity are indicated as a syntax error
	entity without identifier is indicated as a syntax error (highlight in red, hover text)

OFFER LDS EVOLUTION SUGGESTIONS (highlight in yellow, hover text)
	many-to-many suggests adding an intersection entity
	double click suggested intersections to add an intersection (new entity attached to mouse, drop to place)
	pick up on plural attributes and highlight as suggestions to promote to entity
	double click suggested promotions to promote (new entity attached to mouse, drop to place)

EXAMPLE DATA GENERATION
	example data table appears per entity, bring up by command
		edit example data
		pre-fill example data with auto-faker library

APP GENERATION
	set "scale" (nominal/numeric/categoric) on columns
		scaffold an application with all entities associated. Each entity has a full CRUD interface, plus an "Add ___" button to add many-relationship objects. When adding an object that has parent entities, treat their attributes as attributes of the child being added.
			add button for generating a fake data row (mark as fake)
				add "delete all fake data" button

NICE TO HAVE
  resize entity from top or left

  MULTI-SELECT
    box-select multiple entities and relationship endings together
    delete multi-selected entities and relationship endings together
    move multi-selected entities together (ignore selected relationships which cannot be individually moved)

